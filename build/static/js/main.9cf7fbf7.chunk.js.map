{"version":3,"sources":["components/ExpenseForm.js","components/ExpenseItem.js","components/ExpenseList.js","components/Alert.js","App.js","serviceWorker.js","index.js"],"names":["ExpenseForm","charge","amount","handleSubmit","handleAmount","handleCharge","edit","onSubmit","className","htmlFor","type","id","name","placeholder","value","onChange","ExpenseItem","expense","handleDelete","handleEdit","arial-label","onClick","ExpenseList","expenses","clearItems","map","key","length","Alert","text","App","useState","setExpenses","setCharge","setAmount","show","alert","setAlert","setEdit","setId","useEffect","storedItem","JSON","parse","localStorage","getItem","setItem","stringify","handleAlert","setTimeout","e","preventDefault","tempExpenses","item","singleExpense","uuid","target","updatedList","filter","ItemtoEdit","find","reduce","acc","curr","parseInt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9cf7fbf7.chunk.js","sourcesContent":["import React from 'react'\nimport { MdSend } from 'react-icons/md';\n\nexport default function ExpenseForm({charge,amount,handleSubmit,handleAmount,handleCharge,edit}) {\n    return (\n        <form onSubmit={handleSubmit}>\n                <div className=\"form-center\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"charge\">Charge</label>\n                        <input type=\"text\" className=\"form-control\" id=\"charge\" name=\"charge\"\n                        placeholder=\"e.g. rent\" value={charge} onChange={handleCharge}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <input type=\"number\" className=\"form-control\" id=\"amount\" name=\"amount\"\n                        placeholder=\"e.g. 100\" value={amount} onChange={handleAmount}/>\n                    </div>\n                </div>\n                <button className=\"btn\" type=\"submit\">{edit?'edit':'submit'}\n                <MdSend/>\n                </button>\n        </form>\n    )\n}\n","import React from 'react'\nimport { MdDelete,MdEdit } from \"react-icons/md\";\n\nexport default function ExpenseItem({expense ,handleDelete,handleEdit}) {\n    const {id,charge,amount} = expense;\n\n    return (\n        <li className=\"item\">\n            <div className=\"info\">\n              <span className=\"expense\">{charge}</span>\n              <span className=\"amount\">$ {amount}</span>\n            </div>\n            <div>\n                <button className=\"edit-btn\" arial-label=\"edit button\">\n                    <MdEdit onClick={()=>handleEdit(id)}/>\n                </button>\n                <button className=\"clear-btn\" arial-label=\"delete button\">\n                    <MdDelete onClick={() => handleDelete(id)}/>\n                </button>\n            </div>\n        </li>\n    )\n}\n","import React from 'react'\nimport ExpenseItem from './ExpenseItem'\nimport { MdDelete } from \"react-icons/md\";\n\nexport default function ExpenseList({expenses,clearItems,handleDelete,handleEdit}) {\n    return (\n        <>\n           <ul className=\"list\">\n               {expenses.map((expense) => {\n                    return <ExpenseItem expense={expense} key={expense.id} handleDelete={handleDelete} handleEdit={handleEdit}/>\n               })}\n           </ul>\n            {expenses.length > 0 && <button className=\"btn\" onClick={clearItems}>Clear Expense\n            <MdDelete className=\"btn-icon\"/>\n            </button>}\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert({type,text}) {\n    return (\n        <div className={`alert alert-${type}`}>{text}</div>\n    )\n}\n","import React,{useState,useEffect} from 'react';\nimport './App.css';\nimport ExpenseForm from './components/ExpenseForm';\nimport ExpenseList from './components/ExpenseList';\nimport Alert from './components/Alert';\nimport {v4 as uuid} from 'uuid'\n\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"whateverman\"\n  const [expenses, setExpenses] = useState([])\n  const [charge, setCharge] = useState('')\n  const [amount, setAmount] = useState('')\n  const [alert, setAlert] = useState({show:false})\n  const [edit, setEdit] = useState(false)\n  const [id, setId] = useState(0)\n\n  useEffect(() => {\n    const storedItem = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedItem) setExpenses(storedItem)\n  }, [])\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(expenses))\n  }, [expenses])\n\n\n  const handleCharge =(e)=> {\n    setCharge(e.target.value)\n  }\n\n  const handleAlert = ({type,text})=> {\n    setAlert({show:true,type,text});\n    setTimeout(()=> {\n      setAlert({show:false})\n    },3000)\n  }\n\n  const handleAmount =(e)=> {\n    setAmount(e.target.value)\n  }\n\n  const handleSubmit = (e)=> {\n    e.preventDefault()\n    if(charge !=='' && amount> 0){\n      if(edit) {\n         const list = [...expenses]\n          const tempExpenses = list.map(item =>{\n            return item.id ===id? {...item,charge,amount} :item;\n          })\n          setExpenses(tempExpenses)\n          setEdit(false)\n          handleAlert({type:'success',text:`Item edit to charge ${charge} and amount of ${amount}`})\n      } else {\n      const singleExpense ={id:uuid(),charge,amount}\n      setExpenses([...expenses, singleExpense])\n      handleAlert({type:\"success\",text:\"Item Added\"})\n      }\n\n\n      setCharge('')\n      setAmount('')\n    } else {\n      handleAlert({type:\"danger\",text:`charge can't be empty value and amount value hast to be bigger than zero `})\n    }\n  }\n\n  const clearItems = () => {\n    setExpenses([])\n    handleAlert({type:'danger',text:\"All Item Deleted\"})\n }\n\n  const handleDelete = (id) => {\n      const list = [...expenses];\n      const updatedList = list.filter((item =>  item.id !== id))\n      setExpenses(updatedList);\n      handleAlert({type:'danger',text:`Item is Deleted`})\n  }\n\n  const handleEdit = (id) => {\n    // const list = [...expenses];\n    // const updatedList = list.filter((item =>  item.id !== id))\n    const ItemtoEdit = expenses.find(item => item.id ===id);\n    setCharge(ItemtoEdit.charge)\n    setAmount(ItemtoEdit.amount)\n    setEdit(true)\n    setId(id)\n    // setExpenses(updatedList);\n}\n\n  return (\n    <>\n    {alert.show && <Alert type={alert.type} text ={alert.text}/>}\n\n    <h1>budget calculator</h1>\n    <main className=\"App\">\n    <ExpenseForm\n\n     charge={charge} amount={amount}\n     handleSubmit={handleSubmit}\n     handleAmount={handleAmount}\n     handleCharge={handleCharge}\n     edit={edit}/>\n\n    <ExpenseList expenses ={expenses} clearItems={clearItems} handleDelete={handleDelete} handleEdit={handleEdit}/>\n    </main>\n    <h1>\n      total spending: <span className=\"total\">\n        ${expenses.reduce((acc,curr) => {\n          return (acc += parseInt(curr.amount));\n        },0)}\n      </span>\n    </h1>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}